// // import { db, storage } from './firebaseConfig';
// // import { collection, addDoc, updateDoc, deleteDoc, getDocs, doc } from 'firebase/firestore';
// // import { ref, uploadBytes, getDownloadURL } from 'firebase/storage';

// // const WORKOUTS_COLLECTION = 'workouts';

// // export const addWorkout = async (workout) => {
// //   try {
// //     const docRef = await addDoc(collection(db, WORKOUTS_COLLECTION), workout);
// //     return docRef.id;
// //   } catch (error) {
// //     console.error("Error adding workout: ", error);
// //     throw error;
// //   }
// // };

// // export const updateWorkout = async (id, workout) => {
// //   try {
// //     const workoutRef = doc(db, WORKOUTS_COLLECTION, id);
// //     await updateDoc(workoutRef, workout);
// //   } catch (error) {
// //     console.error("Error updating workout: ", error);
// //     throw error;
// //   }
// // };

// // export const deleteWorkout = async (id) => {
// //   try {
// //     await deleteDoc(doc(db, WORKOUTS_COLLECTION, id));
// //   } catch (error) {
// //     console.error("Error deleting workout: ", error);
// //     throw error;
// //   }
// // };

// // export const getWorkouts = async () => {
// //   try {
// //     const querySnapshot = await getDocs(collection(db, WORKOUTS_COLLECTION));
// //     return querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() }));
// //   } catch (error) {
// //     console.error("Error getting workouts: ", error);
// //     throw error;
// //   }
// // };

// // export const uploadImage = async (file) => {
// //   try {
// //     const storageRef = ref(storage, `workouts/${file.name}`);
// //     const snapshot = await uploadBytes(storageRef, file);
// //     const downloadURL = await getDownloadURL(snapshot.ref);
// //     return downloadURL;
// //   } catch (error) {
// //     console.error("Error uploading image: ", error);
// //     throw error;
// //   }
// // };

// import { db, storage } from './firebaseConfig';
// import { ref, set, update, remove, get, child, push } from 'firebase/database';
// import { ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';

// const WORKOUTS_PATH = 'workouts/';

// // Add Workout
// export const addWorkout = async (workout) => {
//   try {
//     const newWorkoutRef = push(ref(db, WORKOUTS_PATH));
//     await set(newWorkoutRef, workout);
//     return newWorkoutRef.key; // Return the unique ID generated by Firebase
//   } catch (error) {
//     console.error("Error adding workout: ", error);
//     throw error;
//   }
// };

// // Update Workout
// export const updateWorkout = async (id, workout) => {
//   try {
//     const workoutRef = ref(db, `${WORKOUTS_PATH}${id}`);
//     await update(workoutRef, workout);
//   } catch (error) {
//     console.error("Error updating workout: ", error);
//     throw error;
//   }
// };

// // Delete Workout
// export const deleteWorkout = async (id) => {
//   try {
//     const workoutRef = ref(db, `${WORKOUTS_PATH}${id}`);
//     await remove(workoutRef);
//   } catch (error) {
//     console.error("Error deleting workout: ", error);
//     throw error;
//   }
// };

// // Get Workouts
// export const getWorkouts = async () => {
//   try {
//     const workoutsRef = ref(db, WORKOUTS_PATH);
//     const snapshot = await get(workoutsRef);
//     const workouts = snapshot.exists() ? snapshot.val() : {};
//     return Object.keys(workouts).map(id => ({ id, ...workouts[id] }));
//   } catch (error) {
//     console.error("Error getting workouts: ", error);
//     throw error;
//   }
// };

// // Upload Image
// export const uploadImage = async (file) => {
//   try {
//     const storageReference = storageRef(storage, `workouts/${file.name}`);
//     const snapshot = await uploadBytes(storageReference, file);
//     const downloadURL = await getDownloadURL(snapshot.ref);
//     return downloadURL;
//   } catch (error) {
//     console.error("Error uploading image: ", error);
//     throw error;
//   }
// };








import { ref, push, set, update, remove, get, child } from 'firebase/database';
import { ref as storageRef, uploadBytes, getDownloadURL } from 'firebase/storage';
import { db, storage } from './firebaseConfig';

const WORKOUTS_REF = 'workouts';

export const addWorkout = async (workout) => {
  try {
    const newWorkoutRef = push(ref(db, WORKOUTS_REF));
    await set(newWorkoutRef, workout);
    return newWorkoutRef.key;
  } catch (error) {
    console.error("Error adding workout: ", error);
    throw error;
  }
};

export const updateWorkout = async (id, workout) => {
  try {
    const updates = {};
    updates[`/${WORKOUTS_REF}/${id}`] = workout;
    await update(ref(db), updates);
  } catch (error) {
    console.error("Error updating workout: ", error);
    throw error;
  }
};

export const deleteWorkout = async (id) => {
  try {
    await remove(ref(db, `${WORKOUTS_REF}/${id}`));
  } catch (error) {
    console.error("Error deleting workout: ", error);
    throw error;
  }
};

export const getWorkouts = async () => {
  try {
    const snapshot = await get(child(ref(db), WORKOUTS_REF));
    if (snapshot.exists()) {
      const workouts = [];
      snapshot.forEach((childSnapshot) => {
        workouts.push({
          id: childSnapshot.key,
          ...childSnapshot.val()
        });
      });
      return workouts;
    } else {
      return [];
    }
  } catch (error) {
    console.error("Error getting workouts: ", error);
    throw error;
  }
};

export const uploadImage = async (file, path = 'workouts') => {
  try {
    const fileRef = storageRef(storage, `${path}/${file.name}`);
    const snapshot = await uploadBytes(fileRef, file);
    const downloadURL = await getDownloadURL(snapshot.ref);
    return downloadURL;
  } catch (error) {
    console.error("Error uploading image: ", error);
    throw error;
  }
};